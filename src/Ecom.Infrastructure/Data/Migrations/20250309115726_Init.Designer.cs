// <auto-generated />
using System;
using Ecom.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecom.Infrastructure.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250309115726_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ecom.Core.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5bf54ecd-e88b-469b-8f35-fb3e942e208e"),
                            Description = "Electronic Items",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = new Guid("fc4e00f1-b435-4aac-8663-87a5ad2920e8"),
                            Description = "Clothing Items",
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = new Guid("601542f2-78d1-4451-a54d-fc213b3c95c4"),
                            Description = "Grocery Items",
                            Name = "Grocery"
                        });
                });

            modelBuilder.Entity("Ecom.Core.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("965b6b09-266f-4fb1-a683-a45751cb4e2a"),
                            CategoryId = new Guid("5bf54ecd-e88b-469b-8f35-fb3e942e208e"),
                            Description = "Laptop",
                            Name = "Laptop",
                            Price = 1000m
                        },
                        new
                        {
                            Id = new Guid("a64ea1bc-1b90-4138-ba48-2303af5e41c7"),
                            CategoryId = new Guid("fc4e00f1-b435-4aac-8663-87a5ad2920e8"),
                            Description = "T-Shirt",
                            Name = "T-Shirt",
                            Price = 20m
                        },
                        new
                        {
                            Id = new Guid("7e76b793-21ad-43d1-bd5c-afd8d373b513"),
                            CategoryId = new Guid("601542f2-78d1-4451-a54d-fc213b3c95c4"),
                            Description = "Rice",
                            Name = "Rice",
                            Price = 10m
                        },
                        new
                        {
                            Id = new Guid("1812a3fb-1b21-42aa-b7c2-b3651a5ca1f7"),
                            CategoryId = new Guid("5bf54ecd-e88b-469b-8f35-fb3e942e208e"),
                            Description = "Mobile",
                            Name = "Mobile",
                            Price = 500m
                        },
                        new
                        {
                            Id = new Guid("3e2dc740-fc6b-499f-abf2-f012063b9faf"),
                            CategoryId = new Guid("fc4e00f1-b435-4aac-8663-87a5ad2920e8"),
                            Description = "Jeans",
                            Name = "Jeans",
                            Price = 50m
                        });
                });

            modelBuilder.Entity("Ecom.Core.Entities.Product", b =>
                {
                    b.HasOne("Ecom.Core.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ecom.Core.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
